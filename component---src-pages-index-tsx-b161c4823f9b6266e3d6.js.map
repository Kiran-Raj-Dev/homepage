{"version":3,"file":"component---src-pages-index-tsx-b161c4823f9b6266e3d6.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/project_list.tsx","webpack://gatsby-starter-hello-world/./src/styles/project_list.module.scss","webpack://gatsby-starter-hello-world/./src/styles/home.module.scss","webpack://gatsby-starter-hello-world/./src/components/hover_icon.tsx","webpack://gatsby-starter-hello-world/./src/styles/hover_icon.module.scss","webpack://gatsby-starter-hello-world/./src/pages/index.tsx","webpack://gatsby-starter-hello-world/./src/utils/languages.tsx","webpack://gatsby-starter-hello-world/./src/utils/svg_mask.tsx"],"sourcesContent":["import { getImage, GatsbyImage, IGatsbyImageData, ImageDataLike } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\nimport * as styles from \"src/styles/project_list.module.scss\";\nimport { Language, languages } from \"src/utils/languages\";\nimport get_mask from \"src/utils/svg_mask\";\n\nexport type Project = {\n    id: number;\n    date: string;\n    languages: Language[];\n    priority: number;\n    dependencies: string[];\n    description: string;\n    slug: string;\n    link: string;\n    title: string;\n    thumb: IGatsbyImageData;\n}\n\nexport function gql_to_project(project: any): Project {\n    return {\n        id: project.node.id,\n        date: project.node.frontmatter?.date,\n        languages: project.node.frontmatter?.languages.map((language: string) => languages.get(language)),\n        priority: parseInt(project.node.frontmatter?.priority),\n        dependencies: project.node.frontmatter?.dependencies,\n        description: project.node.frontmatter?.description,\n        slug: project.node.frontmatter?.slug,\n        link: project.node.frontmatter?.link,\n        title: project.node.frontmatter?.title,\n        thumb: getImage(project.node.frontmatter?.thumb as ImageDataLike)!,\n    };\n}\n\ninterface ProjectListProps {\n    projects: Project[];\n}\nconst ProjectList: React.FC<ProjectListProps> = (props) => {\n    return (\n        <div className={styles.projects}>\n            {props.projects.map(project =>\n                // TODO: can't link same project twice <- non-unique key\n                <a href={project.link} key={`${project.id}`} className={styles.project}>\n                    <div className={styles.content}>\n                        <div className={styles.image}>\n                            <GatsbyImage image={project.thumb} alt=\"thumbnail\" />\n                            <div className={styles.overlay}>\n                                {project.languages.map(language =>\n                                    <div\n                                        className={styles.language_icon}\n                                        style={get_mask(language.icon_mono)}\n                                        key={`${project.id}${language.id}`}\n                                    ></div>\n                                )}\n                            </div>\n                        </div>\n                        <h3>{project.title}</h3>\n                        <p>{project.description}</p>\n                    </div>\n                </a>\n            )}\n        </div>);\n};\nexport default ProjectList;\n","// extracted by mini-css-extract-plugin\nexport var projects = \"project_list-module--projects--r5Yl-\";\nexport var project = \"project_list-module--project--s09uQ\";\nexport var content = \"project_list-module--content--X4RCX\";\nexport var image = \"project_list-module--image--sF6qu\";\nexport var overlay = \"project_list-module--overlay--XYwST\";\nexport var language_icon = \"project_list-module--language_icon--XgM-W\";","// extracted by mini-css-extract-plugin\nexport var languages = \"home-module--languages--TqOl1\";\nexport var language = \"home-module--language---W-Zl\";\nexport var icon = \"home-module--icon---JXD8\";","import React from \"react\";\n\nimport * as styles from \"src/styles/hover_icon.module.scss\";\nimport get_mask from \"src/utils/svg_mask\";\n\ninterface HoverIconProps {\n    icon: string;\n    alt?: string;\n    icon_mono?: string;\n    className?: string;\n}\nconst HoverIcon: React.FC<HoverIconProps> = (props) => {\n    const icon = props.icon;\n    const alt = props.alt ? props.alt : \"icon\";\n    const icon_mono = props.icon_mono ? props.icon_mono : icon;\n    return (\n        <div className={`${styles.icon_wrapper} ${props.className}`}>\n            <img className={styles.icon} src={icon} alt={alt} />\n            <div className={styles.icon_mono} style={get_mask(icon_mono)}></div>\n        </div>\n    );\n};\nexport default HoverIcon;\n","// extracted by mini-css-extract-plugin\nexport var icon_wrapper = \"hover_icon-module--icon_wrapper--mHsqS\";\nexport var icon = \"hover_icon-module--icon--MuKp9\";\nexport var icon_mono = \"hover_icon-module--icon_mono--0p7cT\";","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { HomePage } from \"./__generated__/home-page\";\n\nimport Layout from \"src/components/layout\";\nimport ProjectList, { gql_to_project } from \"src/components/project_list\";\nimport * as styles from \"src/styles/home.module.scss\";\nimport Heading from \"src/components/heading\";\nimport HoverIcon from \"src/components/hover_icon\";\n\ninterface HomeProps {\n    data: HomePage\n}\nconst Home: React.FC<HomeProps> = (props) => {\n    const projects = props.data.allMarkdownRemark.edges.map(gql_to_project);\n\n    return (\n        <Layout heading=\"Flagship Projects\">\n            <ProjectList projects={projects} />\n            <Heading heading=\"Main Languages\" />\n            <div className={styles.languages}>\n                <Link to=\"/projects/cpp\" className={styles.language}>\n                    <HoverIcon className={styles.icon} icon=\"/icons/c-plusplus.svg\" icon_mono=\"/icons/c-plusplus_mono.svg\" alt=\"C++\" />\n                </Link>\n                <Link to=\"/projects/typescript\" className={styles.language}>\n                    <HoverIcon className={styles.icon} icon=\"/icons/typescript-icon.svg\" icon_mono=\"/icons/typescript-icon_mono.svg\" alt=\"TypeScript\" />\n                </Link>\n                <Link to=\"/projects/python\" className={styles.language}>\n                    <HoverIcon className={styles.icon} icon=\"/icons/python.svg\" alt=\"Python\" />\n                </Link>\n            </div>\n        </Layout>\n    )\n};\nexport default Home;\n\nexport const query = graphql`\nquery HomePage {\n  allMarkdownRemark(\n    filter: {frontmatter: {priority: {gte: 0, lte: 1}}}\n    sort: {fields: frontmatter___priority, order: ASC}\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          languages\n          priority\n          dependencies\n          slug\n          link\n          description\n          title\n          thumb {\n            childImageSharp {\n              gatsbyImageData (\n                placeholder: BLURRED\n              )\n            }\n          }\n          date(formatString: \"MMMM YYYY\")\n        }\n      }\n    }\n  }\n}\n`;\n","export type Language = {\n    id: string;\n    name: string;\n    icon: string;\n    icon_mono: string;\n};\n\nexport const languages = new Map<string, Language>([\n    [\"python\", {\n        id: \"python\",\n        name: \"Python\",\n        icon: \"/icons/python.svg\",\n        icon_mono: \"/icons/python.svg\"\n    }],\n    [\"cpp\", {\n        id: \"cpp\",\n        name: \"C++\",\n        icon: \"/icons/c-plusplus.svg\",\n        icon_mono: \"/icons/c-plusplus_mono.svg\"\n    }],\n    [\"typescript\", {\n        id: \"typescript\",\n        name: \"TypeScript\",\n        icon: \"/icons/typescript-icon.svg\",\n        icon_mono: \"/icons/typescript-icon_mono.svg\"\n    }],\n    [\"java\", {\n        id: \"java\",\n        name: \"java\",\n        icon: \"/icons/java.svg\",\n        icon_mono: \"/icons/java.svg\"\n    }],\n]);\n","export default function get_mask(url: string): object {\n    return ({\n        maskImage: `url(\"${url}\")`,\n        WebkitMaskImage: `url(\"${url}\")`,\n    });\n};\n"],"names":["gql_to_project","project","id","node","date","frontmatter","languages","map","language","priority","parseInt","dependencies","description","slug","link","title","thumb","getImage","props","className","projects","href","key","G","image","alt","style","get_mask","icon_mono","icon","styles","src","data","allMarkdownRemark","edges","heading","to","Map","name","url","maskImage","WebkitMaskImage"],"sourceRoot":""}