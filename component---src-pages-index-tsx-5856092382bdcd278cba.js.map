{"version":3,"file":"component---src-pages-index-tsx-5856092382bdcd278cba.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/hover_icon.tsx","webpack://gatsby-starter-hello-world/./src/components/project_list.tsx","webpack://gatsby-starter-hello-world/./src/styles/project_list.module.scss","webpack://gatsby-starter-hello-world/./src/styles/home.module.scss","webpack://gatsby-starter-hello-world/./src/pages/index.tsx","webpack://gatsby-starter-hello-world/./src/utils/languages.tsx"],"sourcesContent":["import React from \"react\";\n\nimport * as styles from \"src/styles/hover_icon.module.scss\";\nimport get_mask from \"src/utils/svg_mask\";\n\ninterface HoverIconProps {\n    icon: string;\n    alt?: string;\n    icon_mono?: string;\n    className?: string;\n    // used to add hover effect to out-of-scope elements\n    icon_class?: string;\n    icon_mono_class?: string;\n}\nconst HoverIcon: React.FC<HoverIconProps> = (props) => {\n    const icon = props.icon;\n    const alt = props.alt ? props.alt : \"icon\";\n    const icon_mono = props.icon_mono ? props.icon_mono : icon;\n    return (\n        <div className={`${styles.icon_wrapper} ${props.className}`}>\n            <img\n                className={`${styles.icon} ${props.icon_class}`}\n                src={icon}\n                alt={alt}\n            />\n            <div\n                className={`${styles.icon_mono} ${props.icon_mono_class}`}\n                style={get_mask(icon_mono)}\n            ></div>\n        </div>\n    );\n};\nexport default HoverIcon;\n","import { getImage, GatsbyImage, IGatsbyImageData, ImageDataLike } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\nimport * as styles from \"src/styles/project_list.module.scss\";\nimport { Language, languages } from \"src/utils/languages\";\nimport get_mask from \"src/utils/svg_mask\";\nimport HoverIcon from \"./hover_icon\";\n\nexport type Project = {\n    id: number;\n    date: string;\n    languages: Language[];\n    priority: number;\n    dependencies: string[];\n    description: string;\n    slug: string;\n    link: string;\n    title: string;\n    thumb: IGatsbyImageData;\n}\n\nexport function gql_to_project(project: any): Project {\n    return {\n        id: project.node.id,\n        date: project.node.frontmatter?.date,\n        languages: project.node.frontmatter?.languages.map((language: string) => languages.get(language)),\n        priority: parseInt(project.node.frontmatter?.priority),\n        dependencies: project.node.frontmatter?.dependencies,\n        description: project.node.frontmatter?.description,\n        slug: project.node.frontmatter?.slug,\n        link: project.node.frontmatter?.link,\n        title: project.node.frontmatter?.title,\n        thumb: getImage(project.node.frontmatter?.thumb as ImageDataLike)!,\n    };\n}\n\ninterface ProjectListProps {\n    projects: Project[];\n    count?: number;\n}\nconst ProjectList: React.FC<ProjectListProps> = (props) => {\n    const count = props.count ? props.count : 4;\n    const full_width = `${100 / count}%`;\n    const half_width = `${100 / Math.ceil(count / 2)}%`;\n    const quarter_width = `${100 / Math.ceil(count / 4)}%`;\n    let width_properties = {\n        \"--full-width\": full_width,\n        \"--half-width\": half_width,\n        \"--quarter-width\": quarter_width,\n    } as React.CSSProperties;\n    return (\n        <div className={styles.projects}>\n            {props.projects.map(project =>\n                // TODO: can't link same project twice <- non-unique key\n                <a href={project.link} target=\"_blank\" key={`${project.id}`} className={styles.project} style={width_properties}>\n                    <div className={styles.content}>\n                        <div className={styles.image_wrapper}>\n                            <GatsbyImage className={styles.image} image={project.thumb} alt=\"thumbnail\" />\n                            <div className={styles.overlay}>\n                                <div className={styles.heading}>\n                                    <h3>{project.title}</h3>\n                                </div>\n                                <div className={styles.languages}>\n                                    {project.languages.map(language =>\n                                        <HoverIcon\n                                            className={styles.language_icon}\n                                            key={`${project.id}${language.id}`}\n                                            icon={language.icon}\n                                            icon_mono={language.icon_mono}\n                                            alt={language.id}\n                                            icon_class={styles.icon}\n                                            icon_mono_class={styles.icon_mono}\n                                        />\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                        <hr />\n                        <div className={styles.text}>\n                            <p>{project.description}</p>\n                        </div>\n                    </div>\n                </a>\n            )}\n        </div>);\n};\nexport default ProjectList;\n","// extracted by mini-css-extract-plugin\nexport var projects = \"project_list-module--projects--r5Yl-\";\nexport var project = \"project_list-module--project--s09uQ\";\nexport var icon = \"project_list-module--icon--af6I8\";\nexport var icon_mono = \"project_list-module--icon_mono--f98N0\";\nexport var content = \"project_list-module--content--X4RCX\";\nexport var image_wrapper = \"project_list-module--image_wrapper--dFZqW\";\nexport var overlay = \"project_list-module--overlay--XYwST\";\nexport var image = \"project_list-module--image--sF6qu\";\nexport var heading = \"project_list-module--heading--WtmWI\";\nexport var languages = \"project_list-module--languages--C854W\";\nexport var language_icon = \"project_list-module--language_icon--XgM-W\";\nexport var text = \"project_list-module--text--JYNq1\";","// extracted by mini-css-extract-plugin\nexport var container = \"home-module--container--aj9vI\";\nexport var first_con = \"home-module--first_con--LiZMI\";\nexport var second_con = \"home-module--second_con---RAfQ\";\nexport var languages = \"home-module--languages--TqOl1\";\nexport var language = \"home-module--language---W-Zl\";\nexport var icon = \"home-module--icon---JXD8\";","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { HomePage } from \"./__generated__/home-page\";\n\nimport Layout from \"src/components/layout\";\nimport ProjectList, { gql_to_project } from \"src/components/project_list\";\nimport * as styles from \"src/styles/home.module.scss\";\nimport Heading from \"src/components/heading\";\nimport HoverIcon from \"src/components/hover_icon\";\n\ninterface HomeProps {\n    data: HomePage\n}\nconst Home: React.FC<HomeProps> = (props) => {\n    const projects = props.data.allMarkdownRemark.edges.map(gql_to_project);\n\n    return (\n        <Layout>\n            <Heading heading=\"Hello Smart People!\" sub_heading=\"I'm a Problem Solver.\" />\n            <div className={styles.first_con}>\n                <ProjectList projects={projects} count={2} />\n            </div>\n            <div className={styles.second_con}>\n                <div className={styles.languages}>\n                    <Link to=\"/projects/cpp\" className={styles.language}>\n                        <HoverIcon className={styles.icon} icon=\"/icons/c-plusplus.svg\" icon_mono=\"/icons/c-plusplus_mono.svg\" alt=\"C++\" />\n                    </Link>\n                    <Link to=\"/projects/typescript\" className={styles.language}>\n                        <HoverIcon className={styles.icon} icon=\"/icons/typescript-icon.svg\" icon_mono=\"/icons/typescript-icon_mono.svg\" alt=\"TypeScript\" />\n                    </Link>\n                    <Link to=\"/projects/python\" className={styles.language}>\n                        <HoverIcon className={styles.icon} icon=\"/icons/python.svg\" alt=\"Python\" />\n                    </Link>\n                </div>\n            </div>\n        </Layout>\n    );\n};\nexport default Home;\n\nexport const query = graphql`\nquery HomePage {\n  allMarkdownRemark(\n    filter: {frontmatter: {priority: {gte: 0, lte: 1}}}\n    sort: {fields: frontmatter___priority, order: ASC}\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          languages\n          priority\n          dependencies\n          slug\n          link\n          description\n          title\n          thumb {\n            childImageSharp {\n              gatsbyImageData (\n                placeholder: BLURRED\n              )\n            }\n          }\n          date(formatString: \"MMMM YYYY\")\n        }\n      }\n    }\n  }\n}\n`;\n","export type Language = {\n    id: string;\n    name: string;\n    icon: string;\n    icon_mono: string;\n};\n\nexport const languages = new Map<string, Language>([\n    [\"python\", {\n        id: \"python\",\n        name: \"Python\",\n        icon: \"/icons/python.svg\",\n        icon_mono: \"/icons/python.svg\"\n    }],\n    [\"cpp\", {\n        id: \"cpp\",\n        name: \"C++\",\n        icon: \"/icons/c-plusplus.svg\",\n        icon_mono: \"/icons/c-plusplus_mono.svg\"\n    }],\n    [\"typescript\", {\n        id: \"typescript\",\n        name: \"TypeScript\",\n        icon: \"/icons/typescript-icon.svg\",\n        icon_mono: \"/icons/typescript-icon_mono.svg\"\n    }],\n    [\"java\", {\n        id: \"java\",\n        name: \"Java\",\n        icon: \"/icons/java.svg\",\n        icon_mono: \"/icons/java.svg\"\n    }],\n]);\n"],"names":["props","icon","alt","icon_mono","className","styles","icon_class","src","icon_mono_class","style","get_mask","gql_to_project","project","id","node","date","frontmatter","languages","map","language","priority","parseInt","dependencies","description","slug","link","title","thumb","getImage","count","width_properties","Math","ceil","projects","href","target","key","G","image","data","allMarkdownRemark","edges","heading","sub_heading","to","Map","name"],"sourceRoot":""}