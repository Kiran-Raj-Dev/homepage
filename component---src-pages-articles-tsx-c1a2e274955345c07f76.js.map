{"version":3,"file":"component---src-pages-articles-tsx-c1a2e274955345c07f76.js","mappings":"sOAiBO,SAASA,EAAeC,GAAwB,IAAD,UAClD,MAAO,CACHC,GAAID,EAAQE,KAAKD,GACjBE,KAAI,UAAEH,EAAQE,KAAKE,mBAAf,aAAE,EAA0BD,KAChCE,YAAW,UAAEL,EAAQE,KAAKE,mBAAf,aAAE,EAA0BC,YACvCC,KAAI,UAAEN,EAAQE,KAAKE,mBAAf,aAAE,EAA0BE,KAChCC,MAAK,UAAEP,EAAQE,KAAKE,mBAAf,aAAE,EAA0BG,MACjCC,OAAOC,EAAAA,EAAAA,GAAQ,UAACT,EAAQE,KAAKE,mBAAd,aAAC,EAA0BI,QAOlD,IAqBA,EArB0C,SAACE,GACvC,IAAMC,EAAWD,EAAME,KAAKC,OAAOC,MAAMC,IAAIhB,GAC7C,OACI,gBAAC,IAAD,CAAQiB,QAAQ,YACXL,EAASI,KAAI,SAAAE,GAAO,OACjB,gBAAC,KAAD,CAAMC,GAAID,EAAQX,KAAMa,IAAKF,EAAQhB,GAAImB,UCnCpC,mCDoCD,gBAAC,EAAAC,EAAD,CAAaD,UCnCd,gCDmCuCE,MAAOL,EAAQT,MAAOe,IAAI,cAChE,uBAAKH,UCnCP,gCDoCM,sBAAIA,UCnCP,mCDmCmCH,EAAQV,OACxC,2BACA,2BACKU,EAAQZ,YAAYmB,MAAM,MAAMT,KAAI,SAAAU,GAAS,OAC1C,yBAAIA","sources":["webpack://homepage/./src/pages/articles.tsx","webpack://homepage/./src/styles/articles.module.scss"],"sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport { getImage, GatsbyImage, IGatsbyImageData, ImageDataLike } from \"gatsby-plugin-image\";\nimport { ArticlesPage } from \"./__generated__/articles-page\";\n\nimport Layout from \"src/components/layout\";\nimport * as styles from \"src/styles/articles.module.scss\";\n\nexport type Article = {\n    id: number;\n    date: string;\n    description: string;\n    slug: string;\n    title: string;\n    thumb: IGatsbyImageData;\n}\n\nexport function gql_to_article(project: any): Article {\n    return {\n        id: project.node.id,\n        date: project.node.frontmatter?.date,\n        description: project.node.frontmatter?.description,\n        slug: project.node.frontmatter?.slug,\n        title: project.node.frontmatter?.title,\n        thumb: getImage(project.node.frontmatter?.thumb as ImageDataLike)!,\n    };\n}\n\ninterface ArticlesProps {\n    data: ArticlesPage;\n}\nconst Articles: React.FC<ArticlesProps> = (props) => {\n    const articles = props.data.allMdx.edges.map(gql_to_article);\n    return (\n        <Layout heading=\"Articles\">\n            {articles.map(article =>\n                <Link to={article.slug} key={article.id} className={styles.article}>\n                    <GatsbyImage className={styles.image} image={article.thumb} alt=\"thumbnail\" />\n                    <div className={styles.body}>\n                        <h2 className={styles.heading}>{article.title}</h2>\n                        <hr />\n                        <div>\n                            {article.description.split(\"\\n\").map(paragraph =>\n                                <p>{paragraph}</p>\n                            )}\n                        </div>\n                    </div>\n                </Link>\n            )}\n        </Layout >\n    );\n};\nexport default Articles;\n\nexport const query = graphql`\nquery ArticlesPage {\n  allMdx(\n    sort: {fields: frontmatter___date, order: ASC}\n    filter: {frontmatter: {type: {eq: \"article\"}, listed: {eq: true}}}\n  ) {\n    edges {\n      node {\n        id\n        frontmatter {\n          slug\n          description\n          title\n          thumb {\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED)\n            }\n          }\n          date(formatString: \"MMMM YYYY\")\n        }\n      }\n    }\n  }\n}\n`;\n","// extracted by mini-css-extract-plugin\nexport var article = \"articles-module--article--Oa2lK\";\nexport var image = \"articles-module--image--1wF4-\";\nexport var body = \"articles-module--body--oGU0n\";\nexport var heading = \"articles-module--heading--SepTG\";"],"names":["gql_to_article","project","id","node","date","frontmatter","description","slug","title","thumb","getImage","props","articles","data","allMdx","edges","map","heading","article","to","key","className","G","image","alt","split","paragraph"],"sourceRoot":""}