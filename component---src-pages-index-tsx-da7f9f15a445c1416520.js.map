{"version":3,"file":"component---src-pages-index-tsx-da7f9f15a445c1416520.js","mappings":"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","sources":["webpack://chris-besch-homepage/./src/components/hover_icon.tsx","webpack://chris-besch-homepage/./src/components/project_list.tsx","webpack://chris-besch-homepage/./src/styles/project_list.module.scss","webpack://chris-besch-homepage/./src/styles/home.module.scss","webpack://chris-besch-homepage/./src/pages/index.tsx","webpack://chris-besch-homepage/./src/utils/consts.tsx","webpack://chris-besch-homepage/./src/utils/languages.tsx","webpack://chris-besch-homepage/./src/styles/utils.module.scss"],"sourcesContent":["import React from \"react\";\n\nimport * as styles from \"src/styles/hover_icon.module.scss\";\nimport get_mask from \"src/utils/svg_mask\";\n\ninterface HoverIconProps {\n    icon: string;\n    alt?: string;\n    icon_mono?: string;\n    className?: string;\n    // used to add hover effect to out-of-scope elements\n    icon_class?: string;\n    icon_mono_class?: string;\n}\nconst HoverIcon: React.FC<HoverIconProps> = (props) => {\n    const icon = props.icon;\n    const alt = props.alt ? props.alt : \"icon\";\n    const icon_mono = props.icon_mono ? props.icon_mono : icon;\n    return (\n        <div className={`${styles.icon_wrapper} ${props.className}`}>\n            <img\n                className={`${styles.icon} ${props.icon_class}`}\n                src={icon}\n                alt={alt}\n            />\n            <div\n                className={`${styles.icon_mono} ${props.icon_mono_class}`}\n                style={get_mask(icon_mono)}\n            ></div>\n        </div>\n    );\n};\nexport default HoverIcon;\n","import { getImage, GatsbyImage, IGatsbyImageData, ImageDataLike } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\nimport * as styles from \"src/styles/project_list.module.scss\";\nimport { Language, languages } from \"src/utils/languages\";\nimport HoverIcon from \"./hover_icon\";\n\nexport type Project = {\n    id: number;\n    date: string;\n    languages: Language[];\n    priority: number;\n    dependencies: string[];\n    description: string;\n    slug: string;\n    link: string;\n    title: string;\n    thumb: IGatsbyImageData;\n}\n\nexport function gql_to_project(project: any): Project {\n    return {\n        id: project.node.id,\n        date: project.node.frontmatter?.date,\n        languages: project.node.frontmatter?.languages.map((language: string) => languages.get(language)),\n        priority: parseInt(project.node.frontmatter?.priority),\n        dependencies: project.node.frontmatter?.dependencies,\n        description: project.node.frontmatter?.description,\n        slug: project.node.frontmatter?.slug,\n        link: project.node.frontmatter?.link,\n        title: project.node.frontmatter?.title,\n        thumb: getImage(project.node.frontmatter?.thumb as ImageDataLike)!,\n    };\n}\n\ninterface ProjectListProps {\n    projects: Project[];\n    count?: number;\n    className?: string;\n}\nconst ProjectList: React.FC<ProjectListProps> = (props) => {\n    const count = props.count ? props.count : 3;\n    const full_width = `${100 / count}%`;\n    const half_width = `${100 / Math.ceil(count / 2)}%`;\n    const quarter_width = `${100 / Math.ceil(count / 4)}%`;\n    let width_properties = {\n        \"--full-width\": full_width,\n        \"--half-width\": half_width,\n        \"--quarter-width\": quarter_width,\n    } as React.CSSProperties;\n    return (\n        <div className={styles.projects}>\n            <div className={props.className}>\n                {props.projects.map(project =>\n                    // TODO: can't link same project twice <- non-unique key\n                    <a href={project.link} target=\"_blank\" key={project.id} className={styles.project} style={width_properties}>\n                        <div className={styles.content}>\n                            <div className={styles.image_wrapper}>\n                                <GatsbyImage className={styles.image} image={project.thumb} alt=\"thumbnail\" />\n                                <div className={styles.overlay}>\n                                    <div className={styles.heading}>\n                                        <h3>{project.title}</h3>\n                                    </div>\n                                    <div className={styles.languages}>\n                                        {project.languages.map(language =>\n                                            <HoverIcon\n                                                className={styles.language_icon}\n                                                key={`${project.id}${language.id}`}\n                                                icon={language.icon}\n                                                icon_mono={language.icon_mono}\n                                                alt={language.id}\n                                                icon_class={styles.icon}\n                                                icon_mono_class={styles.icon_mono}\n                                            />\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                            <hr />\n                            <div className={styles.text}>\n                                <p>{project.description}</p>\n                            </div>\n                        </div>\n                    </a>\n                )}\n            </div>\n        </div>);\n};\nexport default ProjectList;\n","// extracted by mini-css-extract-plugin\nexport var projects = \"project_list-module--projects--r5Yl-\";\nexport var project = \"project_list-module--project--s09uQ\";\nexport var icon = \"project_list-module--icon--af6I8\";\nexport var icon_mono = \"project_list-module--icon_mono--f98N0\";\nexport var content = \"project_list-module--content--X4RCX\";\nexport var image_wrapper = \"project_list-module--image_wrapper--dFZqW\";\nexport var overlay = \"project_list-module--overlay--XYwST\";\nexport var image = \"project_list-module--image--sF6qu\";\nexport var heading = \"project_list-module--heading--WtmWI\";\nexport var languages = \"project_list-module--languages--C854W\";\nexport var language_icon = \"project_list-module--language_icon--XgM-W\";\nexport var text = \"project_list-module--text--JYNq1\";","// extracted by mini-css-extract-plugin\nexport var container = \"home-module--container--aj9vI\";\nexport var first_con = \"home-module--first_con--LiZMI\";\nexport var second_con = \"home-module--second_con---RAfQ\";\nexport var projects = \"home-module--projects---l-zE\";\nexport var languages = \"home-module--languages--TqOl1\";\nexport var language = \"home-module--language---W-Zl\";\nexport var icon = \"home-module--icon---JXD8\";","import React from \"react\";\nimport { graphql, Link } from \"gatsby\";\nimport { HomePage } from \"./__generated__/home-page\";\n\nimport Layout from \"src/components/layout\";\nimport ProjectList, { gql_to_project } from \"src/components/project_list\";\nimport * as styles from \"src/styles/home.module.scss\";\nimport * as util_styles from \"src/styles/utils.module.scss\";\nimport Heading from \"src/components/heading\";\nimport HoverIcon from \"src/components/hover_icon\";\nimport { max_priority_highlight } from \"src/utils/consts\";\n\ninterface HomeProps {\n    data: HomePage\n}\nconst Home: React.FC<HomeProps> = (props) => {\n    const all_projects = props.data.allMarkdownRemark.edges.map(gql_to_project);\n    const projects = all_projects.filter(project => project.priority <= max_priority_highlight);\n\n    return (\n        <Layout>\n            <Heading heading=\"Hello Smart People!\" sub_heading=\"I'm Chris.\" />\n            <div className={styles.container}>\n                <div className={styles.first_con}>\n                    <ProjectList className={styles.projects} projects={projects} count={2} />\n                    <Link className={`${util_styles.block} ${util_styles.link}`} to=\"/projects\">More Projects</Link>\n                </div>\n                <div className={styles.second_con}>\n                    <div className={styles.languages}>\n                        <h2 className={styles.language}>Main Languages</h2>\n                        <Link to=\"/projects/cpp\" className={styles.language}>\n                            <HoverIcon className={styles.icon} icon=\"/icons/c-plusplus.svg\" icon_mono=\"/icons/c-plusplus_mono.svg\" alt=\"C++\" />\n                        </Link>\n                        <Link to=\"/projects/typescript\" className={styles.language}>\n                            <HoverIcon className={styles.icon} icon=\"/icons/typescript-icon.svg\" icon_mono=\"/icons/typescript-icon_mono.svg\" alt=\"TypeScript\" />\n                        </Link>\n                        <Link to=\"/projects/python\" className={styles.language}>\n                            <HoverIcon className={styles.icon} icon=\"/icons/python.svg\" alt=\"Python\" />\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    );\n};\nexport default Home;\n\nexport const query = graphql`\nquery HomePage {\n  allMarkdownRemark(sort: {fields: frontmatter___priority, order: ASC}) {\n    edges {\n      node {\n        id\n        frontmatter {\n          languages\n          priority\n          dependencies\n          slug\n          link\n          description\n          title\n          thumb {\n            childImageSharp {\n              gatsbyImageData(placeholder: BLURRED)\n            }\n          }\n          date(formatString: \"MMMM YYYY\")\n        }\n      }\n    }\n  }\n}\n`;\n","export const max_priority_highlight = 1;\n// highest priority shown in project list\nexport const max_priority_list_default = 20;\n// highest priority shown in language specific project list\nexport const max_priority_language_default = 30;\n// highest priority shown in project list when \"show all\" has been selected\n// highest priority shown in language specific project list when \"show all\" has been selected\nexport const max_priority_list_all = 40;\nexport const max_priority_language_all = 50;\n\n// highlight:\n//  0 - flagship project\n//  1 - highly polished / very interesting\n\n// projects:\n//  2 - polished\n//  3 - polished, bad docs\n//  4 - interesting experiment\n//  6 - polished, unmaintained\n//  7 - polished, little use\n//  8 - polished, abandoned\n//  9 - unpolished\n\n// language specific projects:\n// 21 - early stuff\n\n// all projects:\n// 31 - break fourth wall\n// 32 - show off, no use\n// 33 - show off, no use, less interesting\n// 34 - exotic\n// 35 - \"good\" java\n\n// all language specific languages:\n// 41 - unpolished, exotic\n\n// break url:\n// 51 - broken garbage\n","export type Language = {\n    id: string;\n    name: string;\n    icon: string;\n    icon_mono: string;\n};\n\nexport const languages = new Map<string, Language>([\n    [\"python\", {\n        id: \"python\",\n        name: \"Python\",\n        icon: \"/icons/python.svg\",\n        icon_mono: \"/icons/python.svg\"\n    }],\n    [\"cpp\", {\n        id: \"cpp\",\n        name: \"C++\",\n        icon: \"/icons/c-plusplus.svg\",\n        icon_mono: \"/icons/c-plusplus_mono.svg\"\n    }],\n    [\"typescript\", {\n        id: \"typescript\",\n        name: \"TypeScript\",\n        icon: \"/icons/typescript-icon.svg\",\n        icon_mono: \"/icons/typescript-icon_mono.svg\"\n    }],\n    [\"java\", {\n        id: \"java\",\n        name: \"Java\",\n        icon: \"/icons/java.svg\",\n        icon_mono: \"/icons/java.svg\"\n    }],\n]);\n","// extracted by mini-css-extract-plugin\nexport var main_block = \"utils-module--main_block--S0Wrv\";\nexport var block = \"utils-module--block--2uJ2W\";\nexport var link = \"utils-module--link--9Zc9Q\";"],"names":["props","icon","alt","icon_mono","className","styles","icon_class","src","icon_mono_class","style","get_mask","gql_to_project","project","id","node","date","frontmatter","languages","map","language","priority","parseInt","dependencies","description","slug","link","title","thumb","getImage","count","width_properties","Math","ceil","projects","href","target","key","G","image","data","allMarkdownRemark","edges","filter","max_priority_highlight","heading","sub_heading","util_styles","to","max_priority_list_default","max_priority_language_default","max_priority_list_all","max_priority_language_all","Map","name","main_block","block"],"sourceRoot":""}